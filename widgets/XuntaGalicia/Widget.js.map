{"version":3,"sources":["../../../widgets/XuntaGalicia/Widget.js"],"names":["define","declare","BaseWidget","lang","QueryTask","Query","Graphic","Color","SimpleLineSymbol","SpatialReference","baseClass","postCreate","inherited","arguments","startup","onOpen","cargaConcellos","codigoProvincia","selectProvincia","value","selectConcellos","innerHTML","queryTask","config","serviceUrl","query","outFields","orderByFields","where","execute","hitch","results","opt","document","createElement","text","add","i","features","length","attributes","CODCONC","CONCELLO","cargaParroquias","codigoCONCELLO","selectParroquias","Parroquia","CODPARRO","PARROQUIA","zoomConcello","ZOOMCONCELLO","returnGeometry","outSpatialReference","geom","geometry","map","graphics","clear","STYLE_SOLID","setExtent","getExtent","zoomParroquia","ZOOMPARROQUIA"],"mappings":"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","file":"Widget.js","sourcesContent":["define(['dojo/_base/declare', 'jimu/BaseWidget',\"dojo/_base/lang\",\r\n\"esri/tasks/QueryTask\", \"esri/tasks/query\",\r\n\"esri/graphic\",\"esri/Color\",\"esri/symbols/SimpleLineSymbol\", \"esri/SpatialReference\",\r\n],\r\nfunction(declare, BaseWidget,lang,\r\n  QueryTask, Query,\r\n  Graphic,Color,SimpleLineSymbol,SpatialReference\r\n  ) {\r\n  //To create a widget, you need to derive from BaseWidget.\r\n  return declare([BaseWidget], {\r\n\r\n    // Custom widget code goes here\r\n\r\n    baseClass: 'xunta-galicia',\r\n    // this property is set by the framework when widget is loaded.\r\n    // name: 'XuntaGalicia',\r\n    // add additional properties here\r\n\r\n    //methods to communication with app container:\r\n    postCreate: function() {\r\n      this.inherited(arguments);\r\n     \r\n    },\r\n\r\n    startup: function() {\r\n      this.inherited(arguments);\r\n      \r\n    },\r\n\r\n    onOpen: function(){\r\n      \r\n    },\r\n    cargaConcellos: function () {\r\n      \r\n      let codigoProvincia = this.selectProvincia.value\r\n      if (codigoProvincia == -1) return;\r\n      this.selectConcellos.innerHTML =\"\";\r\n      const queryTask = new QueryTask(this.config.serviceUrl)\r\n      \r\n      const query = new Query();\r\n      // query.returnGeometry== fasle;\r\n      query.outFields= [\"CODCONC\",\"CONCELLO\"]; //se utiliza para solo visualizar los campos necesarios\r\n      query.orderByFields= [\"CONCELLO\"]; // se utiliza para ordenar por nombres\r\n      query.where = \"CODPROV = \" + codigoProvincia;// aqui buscamos que el where de la query sea a partir del codigo de la provincia asi solo mostrara los resultados que queremos\r\n     \r\n      queryTask.execute(query, lang.hitch(this,function(results) {\r\n        // primero la opcion por defecto -1\r\n        let opt = document.createElement(\"option\");\r\n        opt.value = -1;\r\n        opt.text = \"Seleccione concello\";\r\n        this.selectConcellos.add(opt);\r\n        // ahora una opcion para cada opcion\r\n        for (let i = 0; i < results.features.length; i++) {\r\n          opt = document.createElement(\"option\");\r\n          opt.value = results.features[i].attributes.CODCONC;\r\n          opt.text = results.features[i].attributes.CONCELLO;\r\n          this.selectConcellos.add(opt);\r\n          \r\n        }\r\n\r\n      }))\r\n\r\n    },\r\n\r\n    cargaParroquias: function () {\r\n      \r\n      let codigoCONCELLO = this.selectConcellos.value\r\n      if (codigoCONCELLO == -1) return;\r\n      this.selectParroquias.innerHTML =\"\";\r\n      \r\n      const queryTask = new QueryTask(this.config.Parroquia)\r\n     \r\n      const query = new Query();\r\n      // query.returnGeometry== fasle;\r\n      query.outFields= [\"CODCONC\",\"CONCELLO\",\"PARROQUIA\",\"CODPARRO\"]; //se utiliza para solo visualizar los campos necesarios\r\n      query.orderByFields= [\"CONCELLO\"]; // se utiliza para ordenar por nombres\r\n      query.where = \"CODCONC = \" + codigoCONCELLO;// aqui buscamos que el where de la query sea a partir del codigo de la provincia asi solo mostrara los resultados que queremos\r\n      \r\n      queryTask.execute(query, lang.hitch(this,function(results) {\r\n        // primero la opcion por defecto -1\r\n        let opt = document.createElement(\"option\");\r\n        opt.value = -1;\r\n        opt.text = \"Seleccione parroquia\";\r\n        this.selectParroquias.add(opt);\r\n        // ahora una opcion para cada opcion\r\n        for (let i = 0; i < results.features.length; i++) {\r\n          opt = document.createElement(\"option\");\r\n          opt.value = results.features[i].attributes.CODPARRO;\r\n          opt.text = results.features[i].attributes.PARROQUIA;\r\n          this.selectParroquias.add(opt);\r\n          \r\n        }\r\n\r\n      }))\r\n    },\r\n\r\n    zoomConcello: function () {\r\n      \r\n      let ZOOMCONCELLO = this.selectConcellos.value\r\n      if (ZOOMCONCELLO == -1) return;\r\n      \r\n      /// AHORA LA QUERY PARA QUE NOS DE LA GEOMETRIA\r\n      const queryTask = new QueryTask(this.config.serviceUrl)\r\n      \r\n      const query = new Query();\r\n      query.returnGeometry = true;\r\n      query.outSpatialReference = new SpatialReference(102100)\r\n      query.where = \"CODCONC = \" + ZOOMCONCELLO;\r\n      \r\n      queryTask.execute(query,lang.hitch(this,function (results) {\r\n        if(results.features.length>0){\r\n          let geom = results.features[0].geometry;\r\n          this.map.graphics.clear()\r\n          this.map.graphics.add(new Graphic(geom,new SimpleLineSymbol(SimpleLineSymbol.STYLE_SOLID, new Color([0,0,0]), 1)))\r\n          this.map.setExtent(geom.getExtent(),true)\r\n        }\r\n        \r\n      }))\r\n     \r\n     \r\n      \r\n\r\n\r\n    },\r\n    zoomParroquia: function () {\r\n      \r\n      let ZOOMPARROQUIA = this.selectParroquias.value\r\n      if (ZOOMPARROQUIA == -1) return;\r\n      \r\n      /// AHORA LA QUERY PARA QUE NOS DE LA GEOMETRIA\r\n      const queryTask = new QueryTask(this.config.Parroquia)\r\n      \r\n      const query = new Query();\r\n      query.returnGeometry = true;\r\n      query.outSpatialReference = new SpatialReference(102100)\r\n      query.where = \"CODPARRO = \" + ZOOMPARROQUIA;\r\n      \r\n      queryTask.execute(query,lang.hitch(this,function (results) {\r\n        if(results.features.length>0){\r\n          let geom = results.features[0].geometry;\r\n          this.map.graphics.clear()\r\n          this.map.graphics.add(new Graphic(geom,new SimpleLineSymbol(SimpleLineSymbol.STYLE_SOLID, new Color([0,0,0]), 2)))\r\n          this.map.setExtent(geom.getExtent(),true)\r\n        }\r\n        \r\n      }))\r\n    },\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n   //////////////////////////\r\n\r\n  });\r\n\r\n});\r\n"]}